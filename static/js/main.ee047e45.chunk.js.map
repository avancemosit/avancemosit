{"version":3,"sources":["serviceWorker.js","componentes/shared/Menu.js","componentes/home/BodyContent.js","componentes/home/Body.js","componentes/shared/Footer.js","componentes/home/Home.js","index.js"],"names":["Boolean","window","location","hostname","match","Menu","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","BodyContent","props","Active","src","Image","alt","altImageText","Link","target","rel","role","Text","Body","data-ride","data-slide-to","data-slide","aria-hidden","Footer","Home","ReactDOM","render","StrictMode","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iPAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCCeSC,E,uKA3BT,OAEG,yBAAKC,UAAU,yDACZ,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,gBACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,yBAAyBC,gBAAc,wBAAwBC,gBAAc,QAAQC,aAAW,qBACjL,0BAAMP,UAAU,yBAGnB,yBAAKA,UAAU,2BAA2BQ,GAAG,yBAC1C,wBAAIR,UAAU,sBACX,wBAAIA,UAAU,mBACX,uBAAGA,UAAU,WAAWC,KAAK,KAA7B,qBAAmD,0BAAMD,UAAU,WAAhB,eAEtD,wBAAIA,UAAU,YACX,uBAAGA,UAAU,WAAWC,KAAK,cAA7B,cAEH,wBAAID,UAAU,YACX,uBAAGA,UAAU,WAAWC,KAAK,cAA7B,wB,GArBFQ,IAAMC,WCyBVC,MAxBf,SAAqBC,GACjB,OAGI,yBAAKZ,UAAS,wBAAmBY,EAAMC,SACnC,yBAAKb,UAAU,uCACXc,IAAKF,EAAMG,MACXC,IAAKJ,EAAMK,eAEf,6BACI,8BAEJ,yBAAKjB,UAAU,yBACX,uBAAGA,UAAU,0BACTC,KAAMW,EAAMM,KACZC,OAAO,SACPC,IAAI,sBACJC,KAAK,UAAUT,EAAMU,SCwB1BC,E,uKAtCP,OACI,yBAAKf,GAAG,SAASR,UAAU,iBAAiBwB,YAAU,YAClD,wBAAIxB,UAAU,uBACV,wBAAII,cAAY,UAAUqB,gBAAc,IAAIzB,UAAU,YAE1D,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CACIa,OAAO,SACPE,MAAM,wBACNE,aAAa,YACbC,KAAK,8BACLI,KAAK,YAGT,kBAAC,EAAD,CACIT,OAAO,GACPE,MAAM,qBACNE,aAAa,oBACbC,KAAK,6CACLI,KAAK,aAIb,uBAAGtB,UAAU,wBAAwBC,KAAK,UAAUoB,KAAK,SAASK,aAAW,QACzE,0BAAM1B,UAAU,6BAA6B2B,cAAY,SACzD,0BAAM3B,UAAU,WAAhB,aAEJ,uBAAGA,UAAU,wBAAwBC,KAAK,UAAUoB,KAAK,SAASK,aAAW,QACzE,0BAAM1B,UAAU,6BAA6B2B,cAAY,SACzD,0BAAM3B,UAAU,WAAhB,c,GAjCDS,IAAMC,WCsBVkB,E,uKAjBX,OAEI,4BAAQ5B,UAAU,yBAChB,6BACE,8BAEA,gD,GAVSS,IAAMC,WCmCZmB,E,uKA1BT,OAEG,oCAEG,kBAAC,EAAD,MAEC,0BAAMR,KAAK,OAAOrB,UAAU,sBAE1B,yBAAKA,UAAU,aAEZ,kBAAC,EAAD,QAMN,kBAAC,EAAD,W,GApBOS,IAAMC,WCSzBoB,IAASC,OACP,kBAAC,IAAMC,WAAP,wBAEE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KAGE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,QASzCO,SAASC,eAAe,SNiGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ee047e45.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nclass Menu extends React.Component {\n\n   render() {\n\n      return (\n\n         <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n            <a className=\"navbar-brand\" href=\"/\">Avancemos IT</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n               <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n               <ul className=\"navbar-nav mr-auto\">\n                  <li className=\"nav-item active\">\n                     <a className=\"nav-link\" href=\"/\">Nuestros Proyectos<span className=\"sr-only\">(current)</span></a>\n                  </li>\n                  <li className=\"nav-item\">\n                     <a className=\"nav-link\" href=\"/Servicios\">Servicios</a>\n                  </li>\n                  <li className=\"nav-item\">\n                     <a className=\"nav-link\" href=\"/Servicios\">Quines Somos</a>\n                  </li>\n               </ul>\n            </div>\n         </nav>\n\n      )\n   }\n}\n\nexport default Menu;","import React from 'react';\n\n\nfunction BodyContent(props) {\n    return (\n\n\n        <div className={`carousel-item ${props.Active}`}>\n            <img className=\"rounded mx-auto d-block d-block w-75\"\n                src={props.Image}\n                alt={props.altImageText}\n            />\n            <div>\n                <hr/>\n            </div>\n            <div className=\"elementos text-center\">\n                <a className=\"btn btn-outline-success\" \n                    href={props.Link}\n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    role=\"button\">{props.Text}\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default BodyContent;","import React from 'react';\nimport BodyContent from './BodyContent';\nclass Body extends React.Component {\n\n    render() {\n\n        return (\n            <div id=\"slider\" className=\"carousel slide\" data-ride=\"carousel\">\n                <ol className=\"carousel-indicators\">\n                    <li data-target=\"#slider\" data-slide-to=\"0\" className=\"active\"></li>\n                </ol>\n                <div className=\"carousel-inner\">\n                    <BodyContent\n                        Active=\"active\"\n                        Image=\"/images/alcanzame.png\"\n                        altImageText=\"ALCANZAME\"\n                        Link=\"http://www.alcanzame.com.ar\"\n                        Text=\"Visitar\"\n                    />\n\n                    <BodyContent\n                        Active=\"\"\n                        Image=\"/images/bienes.png\"\n                        altImageText=\"Bienes personales\"\n                        Link=\"http://bienespersonales.avancemosit.com.ar\"\n                        Text=\"Visitar\"\n                    />\n                </div>\n                \n                <a className=\"carousel-control-prev\" href=\"#slider\" role=\"button\" data-slide=\"prev\">\n                    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"sr-only\">Previous</span>\n                </a>\n                <a className=\"carousel-control-next\" href=\"#slider\" role=\"button\" data-slide=\"next\">\n                    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span className=\"sr-only\">Next</span>\n                </a>\n            </div>\n        )\n\n    }\n\n}\n\nexport default Body;","import React from 'react';\n \n \nclass Footer extends React.Component {\n \n  render() {\n \n    return (\n \n        <footer className=\"container text-center\">\n          <div>\n            <hr/>\n          </div>\n            <p>\n              Avancemos IT\n            </p>\n        </footer>\n \n    )\n    \n  }\n \n}\n \nexport default Footer;","import React from 'react';\n\nimport Menu from '../shared/Menu'; // Componente Menú (Lo he creado en la Parte 1 de este Tutorial) \nimport Body from './Body';\n//import Servicios from './servicios/Servicios';\nimport Footer from '../shared/Footer'; // Componente Footer (Lo he creado en la Parte 1 de este Tutorial) \n\n\nclass Home extends React.Component {\n\n   render() {\n\n      return (\n\n         <>\n\n            <Menu />\n\n            {<main role=\"main\" className=\"flex-shrink-0 mt-5\">\n\n               <div className=\"container\">\n\n                  <Body />  \n\n               </div>\n\n            </main>}\n\n            <Footer />\n\n         </>\n\n      )\n\n   }\n\n}\n\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; // Librería react-router-dom\n\n//import './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport Home from './componentes/home/Home';\n//import Servicios from './componentes/servicios/Servicios';\n//import Nosotros from './componentes/nosotros/Nosotros';\n//import Contacto from './componentes/contacto/Contacto';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    ReactDOM.render(\n    <Router>\n      <div>\n        <Switch>\n\n          {/* Páginas */}\n          <Route exact path='/' component={Home} />\n          {/* <Route path='/nosotros' component={Nosotros} /> */}\n          {/* <Route path='/servicios' component={Servicios} />  */}\n          {/* <Route path='/contacto' component={Contacto} />  */}\n\n        </Switch>\n      </div>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}